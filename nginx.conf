# nginx.conf: Full-featured configuration for testing

# Since modules are compiled in, there's no need to load them with load_module directives

# User and worker settings
user nginx;
worker_processes auto;
worker_rlimit_nofile 8192;

# Error log and process ID settings
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events block
events {
    worker_connections 1024;
}

# HTTP block
http {
    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log formats
    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';

    log_format quic '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$http3"';

    access_log /var/log/nginx/access.log quic;

    # Compression settings (gzip and brotli)
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000;
    gzip_comp_level 6;

    brotli on;
    brotli_comp_level 6;
    brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # GeoIP settings
    geoip_country /usr/share/GeoIP/GeoIP.dat;
    geoip_city /usr/share/GeoIP/GeoIPCity.dat;

    # SSL/TLS settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # ModSecurity settings
    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsecurity/modsecurity.conf;

    # Real IP settings
    set_real_ip_from 0.0.0.0/0;
    real_ip_header X-Forwarded-For;

    # Include Naxsi Core Rules
    include /etc/nginx/naxsi/naxsi_core.rules;

    # Stub Status (for monitoring Nginx)
    server {
        listen 127.0.0.1:8090;
        server_name localhost;

        location /nginx_status {
            stub_status;
            allow 127.0.0.1;
            deny all;
        }
    }

    # Main server block
    server {
        # Listen on ports for HTTP/3 (QUIC), HTTP/2, and HTTP/1.1
        listen 443 quic reuseport;     # HTTP/3 on UDP
        listen 443 ssl;                # HTTP/2 and HTTP/1.1 on TCP
	http2  on;		       # Enable HTTP/2
        listen 80;                     # HTTP/1.1

        server_name localhost;

        # SSL certificates
        ssl_certificate     /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        # HTTP/3 requires the Alt-Svc header
        add_header Alt-Svc 'h3=":443"; ma=86400';

        # Root and index files
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Location for testing embedded Perl
        location /perl {
            perl 'sub {
                my $r = shift;
                $r->send_http_header("text/plain");
                $r->print("Hello from Perl!\n");
            }';
        }

        # Reverse proxy example
        location /proxy {
            proxy_pass http://127.0.0.1:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # FastCGI example (e.g., PHP-FPM)
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

        # uWSGI example (e.g., Python apps)
        location /uwsgi {
            include uwsgi_params;
            uwsgi_pass 127.0.0.1:9090;
        }

        # SCGI example
        location /scgi {
            include scgi_params;
            scgi_pass 127.0.0.1:9001;
        }

        # Headers More module example
        location /headers {
            more_set_headers 'X-Custom-Header: Testing-Headers';
            return 200 'Header Testing Complete';
        }

        # Enable Brotli and Gzip compression
        location / {
            try_files $uri $uri/ =404;
        }

        # GeoIP example: Deny access from certain countries
        location /geoip {
            if ($geoip_country_code = 'CN') {
                return 403;
            }
            return 200 'Access granted';
        }

        # Error page
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }
    }
}
